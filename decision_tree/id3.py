# -*-coding:utf-8-*-
"""
id3算法实现
"""

#

"""
# 数据准备
#     使用花的真实数据
#     
# 模型构建
#     
# 输入模型
# 产生树
# 预测数据

决策树构建过程
计算各个属性的信息增益
选择最大的划分数据
同样的算法递归到子树
直到一个分类中只有一个类别 或者小于指定数量的记录 或者到达最大迭代次数
"""

import numpy as np


def load_data():
    data = np.array([
        ['是', '单身', '否'],
        ['否', '已婚', '否'],
        ['否', '单身', '否'],
        ['是', '已婚', '否'],
        ['是', '离婚', '否'],
        ['否', '离婚', '是'],
        ['否', '单身', '是'],
        ['否', '已婚', '否'],
        ['否', '单身', '是'],
        ['是', '离婚', '否'],
    ])
    return data

def build_decision_tree(examples):
    """
    构建决策树
    :return:
    """
    pass


